<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Airspace Hugo</title>
    <link>https://dunbitdoo.netlify.com/</link>
    <description>Recent content on Airspace Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Jun 2019 21:49:20 +0200</lastBuildDate>
    
	<atom:link href="https://dunbitdoo.netlify.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Technical Due diligence</title>
      <link>https://dunbitdoo.netlify.com/blog/technicall-due-diligence/</link>
      <pubDate>Sat, 15 Jun 2019 21:49:20 +0200</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/blog/technicall-due-diligence/</guid>
      <description>What is Technical Due Diligence? If you work in an IT you have most likely been part of a Technical Due Diligence (a.k.a Technical Assessment).
It is a process of evaluation of your company:
 - Technology - Technical personnel and organization - Way of work, commitment and structure - Assessment of the risks, weaknesses of the technology and the team  Why Technical Due Diligence? This usually happens when:</description>
    </item>
    
    <item>
      <title>Full Stack Developer</title>
      <link>https://dunbitdoo.netlify.com/jobs/full-stack-developer/</link>
      <pubDate>Sat, 10 Oct 2015 13:07:31 +0200</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/jobs/full-stack-developer/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll</title>
      <link>https://dunbitdoo.netlify.com/blog/migrate-from-jekyll/</link>
      <pubDate>Sat, 10 Oct 2015 13:07:31 +0200</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/blog/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Creating a new theme</title>
      <link>https://dunbitdoo.netlify.com/other/creating-a-new-theme/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/other/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>FR Creating a new theme</title>
      <link>https://dunbitdoo.netlify.com/other/creating-a-new-theme.fr/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/other/creating-a-new-theme.fr/</guid>
      <description>France Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Blog</title>
      <link>https://dunbitdoo.netlify.com/other/_index.fr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/other/_index.fr/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://dunbitdoo.netlify.com/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/contact/</guid>
      <description></description>
    </item>
    
    <item>
      <title>DevOps</title>
      <link>https://dunbitdoo.netlify.com/jobs/devops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/jobs/devops/</guid>
      <description>Install this template by following those simple steps: STEP-1 : Hugo installation Check this link below for install hugo on your computer. hugo install documentation
STEP-2 : Create your project Hugo provides a new command to create a new website.
hugo new site &amp;lt;new_project&amp;gt;  STEP-3 : Install the theme Run this command
hugo new site airspace-hugo  and then go to the themes folder inside of airspace-hugo folder. You can also use this command cd airspace-hugo/themes for going to this folder.</description>
    </item>
    
    <item>
      <title>Expertize</title>
      <link>https://dunbitdoo.netlify.com/expertize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/expertize/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Industry</title>
      <link>https://dunbitdoo.netlify.com/industry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/industry/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Services</title>
      <link>https://dunbitdoo.netlify.com/service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/service/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Team</title>
      <link>https://dunbitdoo.netlify.com/team/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/team/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Work</title>
      <link>https://dunbitdoo.netlify.com/work/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dunbitdoo.netlify.com/work/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>